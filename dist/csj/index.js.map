{"version":3,"names":["_clsHooked","_interopRequireDefault","require","e","__esModule","default","_regeneratorRuntime","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","_assertThisInitialized","ReferenceError","Boolean","valueOf","_get","get","bind","_superPropBase","getOwnPropertyDescriptor","_inherits","_setPrototypeOf","ownKeys","getOwnPropertySymbols","filter","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_toPrimitive","toPrimitive","String","Number","kContextIdFunctionPrefix","kContextIdRegex","RegExp","concat","randomUUID","replace","Math","random","toString","runCallback","callback","data","err","console","error","cloneValue","obj","seen","undefined","Map","Date","getTime","has","Array","copy","set","len","attr","SimpleEventEmitter","subscriptions","oneTimeEvents","on","event","once","self","off","_this","ourCallback","emit","splice","emitOnce","ContextValue","_value","_cache","id","delete","_delete","clear","joinObject","partial","newObj","_partial$key","_SimpleEventEmitter2","_defaultValue","_this2","options","individual","ns","cls","createNamespace","constextId","getContextId","evn","contexts","isArray","events","reject","provider","target","defaultValue","_callee3","_self$processLength$g","_this3","_len","args","_key","contextId","_args3","_callee3$","_context3","processLength","_ref2","_callee2","_self$processLength$g2","result","_callee2$","_context2","runPromise","_callee","_callee$","_context","race","t0","setTimeout","_self$events$contextI","_ref4","_x","_x2","_this$contexts$get$va","_this$contexts$get","getId","context","cache","active","_this$contexts$get$va2","_this$contexts$get2","_this$contexts$get$va3","_this$contexts$get3","assignValue","a_is_obj","includes","b_is_obj","assign","proxyValue","_this$get","Proxy","prop","deleteProperty","createContext","_default","exports"],"sources":["unknown"],"sourcesContent":["const kContextIdFunctionPrefix = \"_context_id_\";\nconst kContextIdRegex = new RegExp(`_${kContextIdFunctionPrefix}_([0-9a-zA-Z]{32})_([0-9a-zA-Z]{32})_(\\\\d+)__`);\nimport cls from \"cls-hooked\";\nconst randomUUID = () => {\n    return \"xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0;\n        const v = c == \"x\" ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n};\nconst runCallback = (callback, data) => {\n    try {\n        callback(data);\n    }\n    catch (err) {\n        console.error(\"Error in subscription callback\", err);\n    }\n};\nconst cloneValue = (obj, seen = new Map()) => {\n    // Handle the 3 simple types, and null or undefined\n    if (!obj || obj === null || typeof obj !== \"object\")\n        return obj;\n    // Handle Date\n    if (obj instanceof Date) {\n        return new Date(obj.getTime());\n    }\n    // Handle previously seen objects to avoid circular references\n    if (seen.has(obj)) {\n        return seen.get(obj);\n    }\n    // Handle Array\n    if (obj instanceof Array) {\n        const copy = [];\n        seen.set(obj, copy); // Add to seen map\n        for (let i = 0, len = obj.length; i < len; i++) {\n            copy[i] = cloneValue(obj[i], seen);\n        }\n        return copy;\n    }\n    // Handle Object\n    if (obj instanceof Object) {\n        const copy = {};\n        seen.set(obj, copy); // Add to seen map\n        for (let attr in obj) {\n            if (obj.hasOwnProperty(attr)) {\n                copy[attr] = cloneValue(obj[attr], seen);\n            }\n        }\n        return copy;\n    }\n    return obj;\n};\nclass SimpleEventEmitter {\n    subscriptions;\n    oneTimeEvents;\n    constructor() {\n        this.subscriptions = [];\n        this.oneTimeEvents = new Map();\n    }\n    on(event, callback) {\n        if (this.oneTimeEvents.has(event)) {\n            runCallback(callback, this.oneTimeEvents.get(event));\n        }\n        else {\n            this.subscriptions.push({ event, callback, once: false });\n        }\n        const self = this;\n        return {\n            stop() {\n                self.off(event, callback);\n            },\n        };\n    }\n    off(event, callback) {\n        this.subscriptions = this.subscriptions.filter((s) => s.event !== event || (callback && s.callback !== callback));\n        return this;\n    }\n    once(event, callback) {\n        return new Promise((resolve) => {\n            const ourCallback = (data) => {\n                resolve(data);\n                callback?.(data);\n            };\n            if (this.oneTimeEvents.has(event)) {\n                runCallback(ourCallback, this.oneTimeEvents.get(event));\n            }\n            else {\n                this.subscriptions.push({\n                    event,\n                    callback: ourCallback,\n                    once: true,\n                });\n            }\n        });\n    }\n    emit(event, data) {\n        if (this.oneTimeEvents.has(event)) {\n            throw new Error(`Event \"${event}\" was supposed to be emitted only once`);\n        }\n        for (let i = 0; i < this.subscriptions.length; i++) {\n            const s = this.subscriptions[i];\n            if (s.event !== event) {\n                continue;\n            }\n            runCallback(s.callback, data);\n            if (s.once) {\n                this.subscriptions.splice(i, 1);\n                i--;\n            }\n        }\n        return this;\n    }\n    emitOnce(event, data) {\n        if (this.oneTimeEvents.has(event)) {\n            throw new Error(`Event \"${event}\" was supposed to be emitted only once`);\n        }\n        this.emit(event, data);\n        this.oneTimeEvents.set(event, data); // Mark event as being emitted once for future subscribers\n        this.off(event); // Remove all listeners for this event, they won't fire again\n        return this;\n    }\n}\nclass ContextValue {\n    _value;\n    _cache;\n    constructor(value) {\n        this._value = value;\n        this._cache = {};\n    }\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        this._value = value;\n    }\n    get cache() {\n        const self = this;\n        return {\n            get: (id) => (id in self._cache ? self._cache[id] : undefined),\n            set: (id, value) => (self._cache[id] = value),\n            delete: (id) => delete self._cache[id],\n            clear: () => (self._cache = {}),\n            has: (id) => id in self._cache,\n        };\n    }\n}\nconst joinObject = (obj, partial) => {\n    const newObj = { ...obj };\n    for (const key in partial) {\n        if (partial.hasOwnProperty(key)) {\n            newObj[key] = partial[key] ?? obj[key];\n        }\n    }\n    return newObj;\n};\nclass Context extends SimpleEventEmitter {\n    _defaultValue;\n    constextId = randomUUID();\n    processLength = new Map();\n    contexts = new Map();\n    events = {};\n    options;\n    ns;\n    constructor(_defaultValue, options = {}) {\n        super();\n        this._defaultValue = _defaultValue;\n        this.options = joinObject({ individual: false }, options);\n        this.ns = cls.createNamespace(this.constextId);\n    }\n    get defaultValue() {\n        return cloneValue(this._defaultValue);\n    }\n    on(event, callback) {\n        const id = this.getContextId();\n        const evn = super.on(event, callback);\n        if (this.contexts.has(id)) {\n            if (!Array.isArray(this.events[id])) {\n                this.events[id] = [];\n            }\n            this.events[id].push({ event, callback });\n            return evn;\n        }\n        else {\n            evn.stop();\n            return evn;\n        }\n    }\n    once(event, callback) {\n        const id = this.getContextId();\n        if (this.contexts.has(id)) {\n            if (!Array.isArray(this.events[id])) {\n                this.events[id] = [];\n            }\n            this.events[id].push({ event, callback });\n            return super.once(event, callback);\n        }\n        else {\n            return Promise.reject();\n        }\n    }\n    off(event, callback) {\n        super.off(event, callback);\n        return this;\n    }\n    emit(event, data) {\n        super.emit(event, data);\n        return this;\n    }\n    emitOnce(event, data) {\n        super.emitOnce(event, data);\n        return this;\n    }\n    provider(target, defaultValue = this.defaultValue) {\n        const self = this;\n        return async function (...args) {\n            const contextId = self.options.individual ? randomUUID() : self.getContextId();\n            if (!self.contexts.has(contextId)) {\n                self.contexts.set(contextId, new ContextValue(defaultValue ?? this.defaultValue));\n            }\n            self.processLength.set(contextId, (self.processLength.get(contextId) ?? 0) + 1);\n            return new Promise(async (resolve, reject) => {\n                let result = undefined, error = undefined;\n                await self.ns.runPromise(async () => {\n                    self.ns.set(\"contextId\", contextId);\n                    try {\n                        result = await Promise.race([target.apply(this, args)]);\n                    }\n                    catch (e) {\n                        error = new Error(e);\n                    }\n                });\n                const length = self.processLength.get(contextId) ?? 0;\n                if (length <= 1) {\n                    setTimeout(() => {\n                        self.contexts.delete(contextId);\n                        self.processLength.delete(contextId);\n                        (self.events[contextId] ?? []).splice(0).forEach(({ event, callback }) => {\n                            self.off(event, callback);\n                        });\n                    }, 1000);\n                }\n                else {\n                    self.processLength.set(contextId, length - 1);\n                }\n                if (error instanceof Error) {\n                    reject(error);\n                }\n                else {\n                    resolve(result);\n                }\n            });\n        };\n    }\n    get value() {\n        const id = this.getContextId();\n        return this.contexts.get(id)?.value ?? this.defaultValue;\n    }\n    set value(value) {\n        this.set(value);\n    }\n    get id() {\n        return this.getId();\n    }\n    getId() {\n        return this.getContextId();\n    }\n    get cache() {\n        const id = this.getContextId();\n        const context = this.contexts.get(id);\n        if (!context) {\n            return new ContextValue(this.defaultValue).cache;\n        }\n        return context.cache;\n    }\n    getContextId() {\n        return this.ns.active ? this.ns.get(\"contextId\") : randomUUID();\n    }\n    get() {\n        const id = this.getContextId();\n        return this.contexts.get(id)?.value ?? this.defaultValue;\n    }\n    set(value) {\n        const id = this.getContextId();\n        const context = this.contexts.get(id);\n        if (context) {\n            context.value = value;\n        }\n        this.emit(\"context\", {\n            contextId: id,\n            value: value,\n        });\n        return this.contexts.get(id)?.value ?? value;\n    }\n    assignValue(value) {\n        const context = this.get();\n        if (!context) {\n            return this.set(value);\n        }\n        const a_is_obj = [\"[object Object]\", \"[object Array]\"].includes(Object.prototype.toString.call(context));\n        const b_is_obj = [\"[object Object]\", \"[object Array]\"].includes(Object.prototype.toString.call(value));\n        if ((a_is_obj && !b_is_obj) || (!a_is_obj && !b_is_obj)) {\n            return context;\n        }\n        else if (!a_is_obj && b_is_obj) {\n            return this.set(value);\n        }\n        return this.set(Object.assign(context, value));\n    }\n    proxyValue() {\n        const context = this.get() ?? {};\n        if (!context || typeof context !== \"object\" || context === null) {\n            throw new Error(\"Context is not an object\");\n        }\n        const self = this;\n        return new Proxy(context, {\n            get(target, prop) {\n                return target[prop];\n            },\n            set(target, prop, value) {\n                target[prop] = value;\n                self.set(target);\n                return true;\n            },\n            deleteProperty(target, prop) {\n                delete target[prop];\n                self.set(target);\n                return true;\n            },\n        });\n    }\n}\n/**\n * Cria um novo contexto com um valor padrão.\n *\n * @template T - O tipo do valor padrão do contexto.\n * @template C - O tipo do escopo cache do contexto, que deve ser um objeto. Por padrão, é um objeto genérico com chaves do tipo string e valores de qualquer tipo. Útil apenas em casos específicos onde você deseja armazenar valores em cache no contexto.\n *\n * @param {T} defaultValue - O valor padrão do contexto.\n * @param {Partial<ContextOptions>} options - Opções para o contexto.\n * @returns {Context<T, C>} Uma nova instância de `Context` com o valor padrão fornecido.\n \n * @example\n * const context = createContext(0);\n *\n * const someFunction = async ()=>{\n *    context.value += 1;\n * };\n *\n * const initialize = context.provider(async function(){\n *     someFunction();\n *     someFunction();\n *     someFunction();\n *     someFunction();\n *     console.log(context.value); // 4\n * });\n *\n * initialize();\n */\nexport function createContext(defaultValue, options = {}) {\n    return new Context(defaultValue, options);\n}\nexport default createContext;\n//# sourceMappingURL=index.js.map"],"mappings":"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","ignoreList":[]}
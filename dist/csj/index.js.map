{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","_assertThisInitialized","ReferenceError","Boolean","valueOf","_get","get","bind","_superPropBase","getOwnPropertyDescriptor","_inherits","_setPrototypeOf","ownKeys","getOwnPropertySymbols","filter","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_toPrimitive","toPrimitive","String","Number","kContextIdFunctionPrefix","kContextIdRegex","RegExp","concat","randomUUID","replace","Math","random","toString","runCallback","callback","data","err","console","error","cloneValue","obj","seen","undefined","Map","Date","getTime","has","Array","copy","set","len","attr","SimpleEventEmitter","subscriptions","oneTimeEvents","on","event","once","self","off","_this","ourCallback","emit","splice","emitOnce","ContextValue","_value","_cache","id","delete","_delete","clear","joinObject","partial","newObj","_partial$key","_SimpleEventEmitter2","_defaultValue","_this2","options","individual","getContextId","evn","contexts","isArray","events","reject","provider","target","defaultValue","_callee","_self$processLength$g","_self$processLength$g2","contextId","fnName","proxy","result","_len","args","_key","_args","_callee$","_context","processLength","constextId","now","Function","t0","setTimeout","_self$events$contextI","_ref2","_this$contexts$get$va","_this$contexts$get","getId","context","cache","_Error$stack","stackTraceLimit","Infinity","stack","split","_iterator","_createForOfIteratorHelper","_step","frame","match","trim","_this$contexts$get$va2","_this$contexts$get2","_this$contexts$get$va3","_this$contexts$get3","assignValue","a_is_obj","includes","b_is_obj","assign","proxyValue","_this$get","Proxy","prop","deleteProperty","createContext","_default","exports","default"],"sources":["unknown"],"sourcesContent":["const kContextIdFunctionPrefix = \"_context_id_\";\nconst kContextIdRegex = new RegExp(`_${kContextIdFunctionPrefix}_([0-9a-zA-Z]{32})_([0-9a-zA-Z]{32})_(\\\\d+)__`);\nconst randomUUID = () => {\n    return \"xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0;\n        const v = c == \"x\" ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n};\nconst runCallback = (callback, data) => {\n    try {\n        callback(data);\n    }\n    catch (err) {\n        console.error(\"Error in subscription callback\", err);\n    }\n};\nconst cloneValue = (obj, seen = new Map()) => {\n    // Handle the 3 simple types, and null or undefined\n    if (obj === null || typeof obj !== \"object\")\n        return obj;\n    // Handle Date\n    if (obj instanceof Date) {\n        return new Date(obj.getTime());\n    }\n    // Handle previously seen objects to avoid circular references\n    if (seen.has(obj)) {\n        return seen.get(obj);\n    }\n    // Handle Array\n    if (obj instanceof Array) {\n        const copy = [];\n        seen.set(obj, copy); // Add to seen map\n        for (let i = 0, len = obj.length; i < len; i++) {\n            copy[i] = cloneValue(obj[i], seen);\n        }\n        return copy;\n    }\n    // Handle Object\n    if (obj instanceof Object) {\n        const copy = {};\n        seen.set(obj, copy); // Add to seen map\n        for (let attr in obj) {\n            if (obj.hasOwnProperty(attr)) {\n                copy[attr] = cloneValue(obj[attr], seen);\n            }\n        }\n        return copy;\n    }\n    return obj;\n};\nclass SimpleEventEmitter {\n    subscriptions;\n    oneTimeEvents;\n    constructor() {\n        this.subscriptions = [];\n        this.oneTimeEvents = new Map();\n    }\n    on(event, callback) {\n        if (this.oneTimeEvents.has(event)) {\n            runCallback(callback, this.oneTimeEvents.get(event));\n        }\n        else {\n            this.subscriptions.push({ event, callback, once: false });\n        }\n        const self = this;\n        return {\n            stop() {\n                self.off(event, callback);\n            },\n        };\n    }\n    off(event, callback) {\n        this.subscriptions = this.subscriptions.filter((s) => s.event !== event || (callback && s.callback !== callback));\n        return this;\n    }\n    once(event, callback) {\n        return new Promise((resolve) => {\n            const ourCallback = (data) => {\n                resolve(data);\n                callback?.(data);\n            };\n            if (this.oneTimeEvents.has(event)) {\n                runCallback(ourCallback, this.oneTimeEvents.get(event));\n            }\n            else {\n                this.subscriptions.push({\n                    event,\n                    callback: ourCallback,\n                    once: true,\n                });\n            }\n        });\n    }\n    emit(event, data) {\n        if (this.oneTimeEvents.has(event)) {\n            throw new Error(`Event \"${event}\" was supposed to be emitted only once`);\n        }\n        for (let i = 0; i < this.subscriptions.length; i++) {\n            const s = this.subscriptions[i];\n            if (s.event !== event) {\n                continue;\n            }\n            runCallback(s.callback, data);\n            if (s.once) {\n                this.subscriptions.splice(i, 1);\n                i--;\n            }\n        }\n        return this;\n    }\n    emitOnce(event, data) {\n        if (this.oneTimeEvents.has(event)) {\n            throw new Error(`Event \"${event}\" was supposed to be emitted only once`);\n        }\n        this.emit(event, data);\n        this.oneTimeEvents.set(event, data); // Mark event as being emitted once for future subscribers\n        this.off(event); // Remove all listeners for this event, they won't fire again\n        return this;\n    }\n}\nclass ContextValue {\n    _value;\n    _cache;\n    constructor(value) {\n        this._value = cloneValue(value);\n        this._cache = {};\n    }\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        this._value = value;\n    }\n    get cache() {\n        const self = this;\n        return {\n            get: (id) => (id in self._cache ? self._cache[id] : undefined),\n            set: (id, value) => (self._cache[id] = value),\n            delete: (id) => delete self._cache[id],\n            clear: () => (self._cache = {}),\n            has: (id) => id in self._cache,\n        };\n    }\n}\nconst joinObject = (obj, partial) => {\n    const newObj = { ...obj };\n    for (const key in partial) {\n        if (partial.hasOwnProperty(key)) {\n            newObj[key] = partial[key] ?? obj[key];\n        }\n    }\n    return newObj;\n};\nclass Context extends SimpleEventEmitter {\n    _defaultValue;\n    constextId = randomUUID();\n    processLength = new Map();\n    contexts = new Map();\n    events = {};\n    options;\n    constructor(_defaultValue, options = {}) {\n        super();\n        this._defaultValue = _defaultValue;\n        this.options = joinObject({ individual: false }, options);\n    }\n    get defaultValue() {\n        return cloneValue(this._defaultValue);\n    }\n    on(event, callback) {\n        const id = this.getContextId();\n        const evn = super.on(event, callback);\n        if (this.contexts.has(id)) {\n            if (!Array.isArray(this.events[id])) {\n                this.events[id] = [];\n            }\n            this.events[id].push({ event, callback });\n            return evn;\n        }\n        else {\n            evn.stop();\n            return evn;\n        }\n    }\n    once(event, callback) {\n        const id = this.getContextId();\n        if (this.contexts.has(id)) {\n            if (!Array.isArray(this.events[id])) {\n                this.events[id] = [];\n            }\n            this.events[id].push({ event, callback });\n            return super.once(event, callback);\n        }\n        else {\n            return Promise.reject();\n        }\n    }\n    off(event, callback) {\n        super.off(event, callback);\n        return this;\n    }\n    emit(event, data) {\n        super.emit(event, data);\n        return this;\n    }\n    emitOnce(event, data) {\n        super.emitOnce(event, data);\n        return this;\n    }\n    provider(target, defaultValue = this.defaultValue) {\n        const self = this;\n        return async function (...args) {\n            const contextId = self.options.individual ? randomUUID() : self.getContextId();\n            if (!self.contexts.has(contextId)) {\n                self.contexts.set(contextId, new ContextValue(defaultValue ?? this._defaultValue));\n            }\n            self.processLength.set(contextId, (self.processLength.get(contextId) ?? 0) + 1);\n            const fnName = `_${kContextIdFunctionPrefix}_${self.constextId}_${contextId}_${Date.now()}__`;\n            const proxy = new Function(`return function ${fnName}(self, target) {\r\n                    return Promise.race([target.apply(self, Array.from(arguments).slice(2))]);\r\n                };`)();\n            let result = undefined, error = undefined;\n            try {\n                result = await proxy(this, target, ...args);\n            }\n            catch (e) {\n                error = new Error(e);\n            }\n            const length = self.processLength.get(contextId) ?? 0;\n            if (length <= 1) {\n                setTimeout(() => {\n                    self.contexts.delete(contextId);\n                    self.processLength.delete(contextId);\n                    (self.events[contextId] ?? []).splice(0).forEach(({ event, callback }) => {\n                        self.off(event, callback);\n                    });\n                }, 15000);\n            }\n            else {\n                self.processLength.set(contextId, length - 1);\n            }\n            return error instanceof Error ? Promise.reject(error) : result;\n        };\n    }\n    get value() {\n        const id = this.getContextId();\n        return this.contexts.get(id)?.value ?? this.defaultValue;\n    }\n    set value(value) {\n        this.set(value);\n    }\n    get id() {\n        return this.getId();\n    }\n    getId() {\n        return this.getContextId();\n    }\n    get cache() {\n        const id = this.getContextId();\n        const context = this.contexts.get(id);\n        if (!context) {\n            return new ContextValue(this.defaultValue).cache;\n        }\n        return context.cache;\n    }\n    getContextId() {\n        Error.stackTraceLimit = Infinity;\n        const stack = (new Error().stack ?? \"\").split(\"\\n\");\n        for (const frame of stack) {\n            const match = frame.match(kContextIdRegex);\n            if (!match) {\n                continue;\n            }\n            const contextId = match[1], id = match[2];\n            if (typeof contextId !== \"string\" || contextId.trim() === \"\") {\n                continue;\n            }\n            if (contextId !== this.constextId) {\n                continue;\n            }\n            if (typeof id !== \"string\" || id.trim() === \"\") {\n                continue;\n            }\n            return id;\n        }\n        return randomUUID();\n    }\n    get() {\n        const id = this.getContextId();\n        return this.contexts.get(id)?.value ?? this.defaultValue;\n    }\n    set(value) {\n        const id = this.getContextId();\n        const context = this.contexts.get(id);\n        if (context) {\n            context.value = value;\n        }\n        this.emit(\"context\", {\n            contextId: id,\n            value: value,\n        });\n        return this.contexts.get(id)?.value ?? value;\n    }\n    assignValue(value) {\n        const context = this.get();\n        if (!context) {\n            return this.set(value);\n        }\n        const a_is_obj = [\"[object Object]\", \"[object Array]\"].includes(Object.prototype.toString.call(context));\n        const b_is_obj = [\"[object Object]\", \"[object Array]\"].includes(Object.prototype.toString.call(value));\n        if ((a_is_obj && !b_is_obj) || (!a_is_obj && !b_is_obj)) {\n            return context;\n        }\n        else if (!a_is_obj && b_is_obj) {\n            return this.set(value);\n        }\n        return this.set(Object.assign(context, value));\n    }\n    proxyValue() {\n        const context = this.get() ?? {};\n        if (!context || typeof context !== \"object\" || context === null) {\n            throw new Error(\"Context is not an object\");\n        }\n        const self = this;\n        return new Proxy(context, {\n            get(target, prop) {\n                return target[prop];\n            },\n            set(target, prop, value) {\n                target[prop] = value;\n                self.set(target);\n                return true;\n            },\n            deleteProperty(target, prop) {\n                delete target[prop];\n                self.set(target);\n                return true;\n            },\n        });\n    }\n}\n/**\n * Cria um novo contexto com um valor padrão.\n *\n * @template T - O tipo do valor padrão do contexto.\n * @template C - O tipo do escopo cache do contexto, que deve ser um objeto. Por padrão, é um objeto genérico com chaves do tipo string e valores de qualquer tipo. Útil apenas em casos específicos onde você deseja armazenar valores em cache no contexto.\n *\n * @param {T} defaultValue - O valor padrão do contexto.\n * @param {Partial<ContextOptions>} options - Opções para o contexto.\n * @returns {Context<T, C>} Uma nova instância de `Context` com o valor padrão fornecido.\n \n * @example\n * const context = createContext(0);\n *\n * const someFunction = async ()=>{\n *    context.value += 1;\n * };\n *\n * const initialize = context.provider(async function(){\n *     someFunction();\n *     someFunction();\n *     someFunction();\n *     someFunction();\n *     console.log(context.value); // 4\n * });\n *\n * initialize();\n */\nexport function createContext(defaultValue, options = {}) {\n    return new Context(defaultValue, options);\n}\nexport default createContext;\n//# sourceMappingURL=index.js.map"],"mappings":"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","ignoreList":[]}